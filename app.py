import streamlit as st
from chatbot_gemini import BookStoreChatbotGemini
import subprocess
import os

# Cháº¡y init_db.py Ä‘á»ƒ táº¡o database
if not os.path.exists("bookstore.db"):
    subprocess.run(["python", "init_db.py"])

st.title("ğŸ“š Chatbot NhÃ  SÃ¡ch (Gemini Version)")
st.caption("Chatbot cÃ³ thá»ƒ giÃºp báº¡n tÃ¬m sÃ¡ch vÃ  Ä‘áº·t hÃ ng")

# Láº¥y API key
try:
    api_key = st.secrets["GOOGLE_API_KEY"]
except:
    st.error("Lá»—i secrets.toml. ThÃªm GOOGLE_API_KEY.")
    st.stop()

# Khá»Ÿi táº¡o chatbot
if "chatbot" not in st.session_state:
    st.session_state.chatbot = BookStoreChatbotGemini(api_key=api_key)

# Khá»Ÿi táº¡o history
if "messages" not in st.session_state:
    st.session_state.messages = [{"role": "model", "parts": ["Xin chÃ o! TÃ´i cÃ³ thá»ƒ giÃºp gÃ¬ cho báº¡n?"]}]

# Hiá»ƒn thá»‹ messages
for message in st.session_state.messages:
    role = "user" if message["role"] == "user" else "assistant"
    with st.chat_message(role):
        st.markdown("".join(message["parts"]))

# Input user
if prompt := st.chat_input("Báº¡n cáº§n tÃ¬m sÃ¡ch gÃ¬ hoáº·c muá»‘n Ä‘áº·t hÃ ng?"):
    st.session_state.messages.append({"role": "user", "parts": [prompt]})
    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        with st.spinner("Bot Ä‘ang suy nghÄ©..."):
            response_text = st.session_state.chatbot.get_response(st.session_state.messages)
            st.markdown(response_text)
    
    st.session_state.messages.append({"role": "model", "parts": [response_text]})